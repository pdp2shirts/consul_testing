# This is a basic workflow to help you get started with Actions

name: Consul Register Service

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths:
    - "declarations/consul/register/**"
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: read S3 bucket
      uses: prewk/s3-cp-action@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1' # optional: defaults to us-east-1
        SOURCE: 's3://dgarrison-consul-sd/deploy-infrastructure'
        DEST: './s3-variables'

    # Runs a single command using the runners shell
    - name: Install Consul CLI & Consul Templating
      run: |
       sudo sh ./consul.sh
       sudo sh ./consul_template.sh

    # Runs a set of commands using the runners shell
    - name: Check version of Consul
      id: consul
      run: |
        echo ::set-output name=console-output::$(consul version)
        
    - name: Display console output
      run: echo "This is the Consul version = ${{ steps.consul.outputs.console-output }}"

    - name: Read Consul Host Data
      id: consul_host
      run: | 
        echo ::set-output name=consul_host::$(cat ./s3-variables | jq '.outputs.Consul_UI.value')
        
    - name: get list of changed files
      id: files
      uses: jitterbit/get-changed-files@v1

    - name: Register Added Service Definitions
      run: |
        export CONSUL_HTTP_SSL_VERIFY=false
        for changed_file in ${{ steps.files.outputs.added_modified }}; do
        if [[ $changed_file =~  ^declarations/consul/register/.* ]]
        then
          (consul services register -http-addr=${{ steps.consul_host.outputs.consul_host }} ${changed_file})
        fi
        done

    - name: Register Renamed Service Definitions
      run: |
        export CONSUL_HTTP_SSL_VERIFY=false
        for changed_file in ${{ steps.files.outputs.renamed }}; do
        if [[ $changed_file =~  ^declarations/consul/register/.* ]]
        then
          (consul services register -http-addr=${{ steps.consul_host.outputs.consul_host }} ${changed_file})
        fi
        done
        
    - name: Show Registered Services
      run: |
        export CONSUL_HTTP_SSL_VERIFY=false
        (consul catalog services -http-addr=${{ steps.consul_host.outputs.consul_host }})
        
